import classNames from "classnames";
import styles from "./StatusIndicator.module.css";
import { tourStatus } from "@/types";
import { TEMP_animationOptions, getStatusColor } from "@/lib/utils";
import { motion } from "framer-motion";
import { CarCheck } from "../Icons/Icons";

const WaitingIcon = (props) => (
  <svg
    width={16}
    height={17}
    viewBox="0 0 16 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M8 1.93018C8 1.37789 8.44944 0.923734 8.99741 0.992592C10.1655 1.13937 11.2911 1.54276 12.2916 2.17872C13.5745 2.99417 14.5984 4.15824 15.2436 5.53462C15.8888 6.911 16.1285 8.44271 15.9347 9.9504C15.7408 11.4581 15.1214 12.8793 14.149 14.0477C13.1766 15.2161 11.8915 16.0833 10.4441 16.5477C8.99664 17.0121 7.44686 17.0545 5.97621 16.67C4.50556 16.2854 3.1749 15.4898 2.14006 14.3764C1.33301 13.508 0.73193 12.4744 0.375485 11.3523C0.208269 10.826 0.573266 10.3015 1.11637 10.2013L7.18158 9.0813C7.65582 8.99373 8 8.58017 8 8.09792L8 1.93018Z"
      fill="currentColor"
    />
  </svg>
);

const CheckIcon = (props) => (
  <svg
    width={14}
    height={11}
    viewBox="0 0 14 11"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M12.3333 1.79053L4.99996 9.12386L1.66663 5.79053"
      stroke="#193B2D"
      strokeWidth={2.5}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const CarIcon = (props) => (
  <svg
    width={16}
    height={13}
    viewBox="0 0 16 13"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M5.16423 0.334078L5.26096 0.334174H10.1869L10.2837 0.334078C10.7394 0.333397 11.1394 0.3328 11.4959 0.472983C11.8075 0.595559 12.0834 0.794419 12.2983 1.05133C12.544 1.34514 12.6699 1.72482 12.8134 2.1574L12.8439 2.2492L13.4481 4.0617L14.094 3.73872C14.4234 3.57402 14.824 3.70754 14.9887 4.03693C15.1534 4.36633 15.0199 4.76688 14.6905 4.93158L14.2921 5.13076C14.4826 5.32415 14.6436 5.54667 14.7683 5.79153C14.9332 6.11517 14.999 6.45972 15.0296 6.83454C15.0591 7.19544 15.0591 7.63847 15.0591 8.17527V10.0032L15.0591 10.0591V10.0592C15.0593 10.313 15.0595 10.5316 15.0206 10.7269C14.8628 11.5205 14.2424 12.1408 13.4489 12.2987C13.2536 12.3375 13.035 12.3373 12.7811 12.3371H12.7811L12.7252 12.3371H12.3917C11.4005 12.3371 10.5777 11.6162 10.4189 10.67H5.02896C4.87023 11.6162 4.04738 12.3371 3.05614 12.3371H2.72272L2.66679 12.3371H2.66677C2.41291 12.3373 2.19431 12.3375 1.99903 12.2987C1.20546 12.1408 0.585109 11.5205 0.427257 10.7269C0.388412 10.5316 0.388586 10.313 0.388788 10.0591L0.388818 10.0032L0.388818 8.17522C0.388809 7.63844 0.388802 7.19543 0.418288 6.83454C0.448912 6.45972 0.514637 6.11517 0.679538 5.79153C0.804298 5.54668 0.965314 5.32415 1.15579 5.13076L0.757432 4.93158C0.428033 4.76688 0.294517 4.36633 0.459217 4.03693C0.623917 3.70754 1.02446 3.57402 1.35386 3.73872L1.99983 4.0617L2.604 2.2492L2.6345 2.1574L2.6345 2.1574C2.77798 1.72482 2.90391 1.34514 3.14961 1.05133C3.36445 0.79442 3.64036 0.59556 3.95202 0.472983C4.30845 0.3328 4.70847 0.333397 5.16423 0.334078ZM4.22886 4.33515H4.22887H4.22889H11.219H11.219H11.219C11.5619 4.33514 11.8666 4.33514 12.136 4.34282L11.5787 2.67094C11.3858 2.09229 11.3367 1.98037 11.2752 1.90689C11.2036 1.82125 11.1116 1.75496 11.0077 1.7141C10.9186 1.67904 10.7969 1.66783 10.1869 1.66783H5.26096C4.65101 1.66783 4.5293 1.67904 4.44015 1.7141C4.33626 1.75496 4.24429 1.82125 4.17268 1.90688C4.11122 1.98037 4.0621 2.09229 3.86922 2.67094L3.31192 4.34282C3.58133 4.33514 3.88596 4.33514 4.22886 4.33515ZM4.59719 6.88722C4.59719 7.42628 4.1602 7.86327 3.62113 7.86327C3.08207 7.86327 2.64508 7.42628 2.64508 6.88722C2.64508 6.34816 3.08207 5.91116 3.62113 5.91116C4.1602 5.91116 4.59719 6.34816 4.59719 6.88722ZM11.737 8.00474C12.2761 8.00474 12.7131 7.56775 12.7131 7.02869C12.7131 6.48963 12.2761 6.05263 11.737 6.05263C11.198 6.05263 10.761 6.48963 10.761 7.02869C10.761 7.56775 11.198 8.00474 11.737 8.00474Z"
      fill="currentColor"
    />
  </svg>
);

const FlagIcon = (props) => (
  <svg
    width={14}
    height={17}
    viewBox="0 0 14 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M1.66663 10.5111C1.66663 10.5111 2.33329 9.84448 4.33329 9.84448C6.33329 9.84448 7.66663 11.1778 9.66663 11.1778C11.6666 11.1778 12.3333 10.5111 12.3333 10.5111V2.51115C12.3333 2.51115 11.6666 3.17782 9.66663 3.17782C7.66663 3.17782 6.33329 1.84448 4.33329 1.84448C2.33329 1.84448 1.66663 2.51115 1.66663 2.51115V10.5111Z"
      fill="#0B68CB"
    />
    <path
      d="M1.66663 2.51115C1.66663 2.51115 2.33329 1.84448 4.33329 1.84448C6.33329 1.84448 7.66663 3.17782 9.66663 3.17782C11.6666 3.17782 12.3333 2.51115 12.3333 2.51115V10.5111C12.3333 10.5111 11.6666 11.1778 9.66663 11.1778C7.66663 11.1778 6.33329 9.84448 4.33329 9.84448C2.33329 9.84448 1.66663 10.5111 1.66663 10.5111V2.51115ZM1.66663 2.51115L1.66663 15.1778"
      stroke="#0B68CB"
      strokeWidth={2}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const AbortIcon = (props) => (
  <svg
    width={10}
    height={10}
    viewBox="0 0 10 10"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M8.33329 1.5968L1.66663 8.26347M1.66663 1.5968L8.33329 8.26347"
      stroke="#641723"
      strokeWidth={2.5}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const CarCheckIcon = (props) => (
  <svg
    width={16}
    height={17}
    viewBox="0 0 16 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M14.3903 6.01383C14.3903 7.85523 12.8975 9.34798 11.0561 9.34798C9.21473 9.34798 7.72198 7.85523 7.72198 6.01383C7.72198 4.17244 9.21473 2.67969 11.0561 2.67969C12.8975 2.67969 14.3903 4.17244 14.3903 6.01383ZM13.0022 4.46715C13.2626 4.72757 13.2626 5.14979 13.0021 5.41019L10.8515 7.56068C10.5911 7.82108 10.1689 7.82107 9.90849 7.56066L9.11003 6.76219C8.84962 6.50177 8.84963 6.07956 9.11004 5.81915C9.37046 5.55874 9.79267 5.55874 10.0531 5.81916L10.38 6.14612L12.0591 4.46712C12.3196 4.20672 12.7418 4.20673 13.0022 4.46715ZM14.7664 9.2914C14.6917 9.14472 14.6039 9.00606 14.5046 8.87688C14.0081 9.4542 13.3727 9.90871 12.6503 10.1886C12.6897 10.2945 12.7111 10.409 12.7111 10.5286C12.7111 11.0676 12.2742 11.5046 11.7351 11.5046C11.196 11.5046 10.759 11.0676 10.759 10.5286C10.759 10.5183 10.7592 10.5081 10.7595 10.498C8.98492 10.4214 7.46721 9.35395 6.74568 7.83502H4.22694H4.22692H4.22691H4.22689H4.22688C3.88399 7.83501 3.57937 7.83501 3.30997 7.84269L3.86726 6.17081C4.06015 5.59216 4.10927 5.48024 4.17072 5.40675C4.24234 5.32111 4.33431 5.25483 4.4382 5.21397C4.52735 5.17891 4.64906 5.1677 5.25901 5.1677H6.3438C6.41116 4.69682 6.5488 4.24861 6.74575 3.83404H5.25901L5.16227 3.83394C4.70651 3.83326 4.3065 3.83267 3.95007 3.97285C3.6384 4.09543 3.3625 4.29429 3.14765 4.5512C2.90195 4.84501 2.77602 5.22468 2.63255 5.65727L2.63254 5.65727L2.60205 5.74907L1.99788 7.56157L1.35191 7.23859C1.02251 7.07389 0.621964 7.2074 0.457264 7.5368C0.292564 7.8662 0.42608 8.26675 0.755479 8.43145L1.15384 8.63063C0.963361 8.82402 0.802345 9.04654 0.677585 9.2914C0.512684 9.61503 0.446959 9.95959 0.416334 10.3344C0.386849 10.6953 0.386856 11.1383 0.386865 11.6751L0.386865 13.5031L0.386835 13.559C0.386633 13.8129 0.386459 14.0315 0.425304 14.2268C0.583156 15.0203 1.2035 15.6407 1.99708 15.7985C2.19236 15.8374 2.41096 15.8372 2.66481 15.837H2.66484L2.72077 15.837H3.05418C4.04542 15.837 4.86828 15.116 5.02701 14.1699H10.417C10.5757 15.116 11.3986 15.837 12.3898 15.837H12.7232L12.7791 15.837H12.7792C13.033 15.8372 13.2516 15.8374 13.4469 15.7985C14.2405 15.6407 14.8608 15.0203 15.0187 14.2268C15.0575 14.0315 15.0573 13.8129 15.0571 13.559V13.559L15.0571 13.5031V11.6751C15.0571 11.1383 15.0571 10.6953 15.0276 10.3344C14.997 9.95959 14.9313 9.61503 14.7664 9.2914ZM4.59524 10.3871C4.59524 10.9261 4.15824 11.3631 3.61918 11.3631C3.08012 11.3631 2.64313 10.9261 2.64313 10.3871C2.64313 9.84802 3.08012 9.41103 3.61918 9.41103C4.15824 9.41103 4.59524 9.84802 4.59524 10.3871Z"
      fill="currentColor"
    />
  </svg>
);

type StatusIndicator = {
  status: tourStatus;
  className?: string;
};

const StatusIndicator = (props) => {
  const { status, className, ...rest } = props;

  const statusIconMap = {
    geplant: CheckIcon,
    "fahrzeug kommt": CarIcon,
    "kunde eingestiegen": FlagIcon,
    "fahre zum ziel": FlagIcon,
    "auftrag abgeschlossen": CarCheckIcon,
    "auftrag storniert": AbortIcon,
  };

  const lowerCaseStatus = status.toLowerCase();
  const Icon = statusIconMap[lowerCaseStatus] || null;

  const statusColor = getStatusColor(status);

  return (
    <motion.div
      className={classNames(styles.indicator, styles[statusColor], className)}
      data-status={lowerCaseStatus}
      {...rest}
    >
      <div className={styles.inner}>
        {/* {statusColor} */}
        <Icon />
      </div>
    </motion.div>
  );
};

export default StatusIndicator;
